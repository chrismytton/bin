#!/bin/sh
# Usage: git-configure [--force]
set -e

if [ ! -f "$HOME/.gitconfig" -o "$1" = "--force" ]; then
  echo "configuring ~/.gitconfig"
  /bin/echo -n "user.name (your full name): "
  read user_name
  /bin/echo -n "user.email (your email): "
  read user_email

  cat > "$HOME/.gitconfig" <<GITCONFIG
[user]
  name = $user_name
  email = $user_email
[color]
  ui = auto
[alias]
  pl = pull --rebase
  st = status -sb
  p = push
  po = push origin master
  d = diff
  dc = diff --cached
  a = add
  c = commit -v
  ca = commit -va
  co = checkout
  b = branch
  ba = branch -a
  x = !gitx
  ctags = !.git/hooks/ctags

  # Fancy logging, stolen from @garybernhardt/dotfiles
  #   h = head
  #   hp = head with patch
  #   r = recent commits, only current branch
  #   ra = recent commits, all reachable refs
  #   l = all commits, only current branch
  #   la = all commits, all reachable refs
  head = !git l -1
  h = !git head
  hp = "!source ~/.githelpers && show_git_head"
  r = !git l -30
  ra = !git r --all
  l = "!source ~/.githelpers && pretty_git_log"
  la = !git l --all
[core]
  excludesfile = $HOME/.gitignore
[instaweb]
  httpd = webrick
[push]
  default = upstream
[init]
  templatedir = ~/.git_template
[help]
  autocorrect = 1
[credential]
  helper = osxkeychain
[hub]
  protocol = https
GITCONFIG
else
  echo "existing ~/.gitconfig found, use --force to override" >&2
fi
