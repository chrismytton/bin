#!/usr/bin/env ruby
# Usage: git-configure [--force] [--update]
require 'erb'

gitconfig = ERB.new <<GITCONFIG
[user]
name = <%= user_name %>
email = <%= user_email %>

[color]
ui = auto

[alias]
pl = pull --rebase
st = status -sb
p = push
po = push origin master
d = diff
dc = diff --cached
a = add
c = commit -v
ca = commit -va
co = checkout
b = branch
ba = branch -a
x = !gitx
ctags = !.git/hooks/ctags
# Fancy logging, stolen from @garybernhardt/dotfiles
#   h = head
#   hp = head with patch
#   r = recent commits, only current branch
#   ra = recent commits, all reachable refs
#   l = all commits, only current branch
#   la = all commits, all reachable refs
head = !git l -1
h = !git head
hp = "!source ~/.githelpers && show_git_head"
r = !git l -30
ra = !git r --all
l = "!source ~/.githelpers && pretty_git_log"
la = !git l --all
podiff = !git podiff

[core]
excludesfile = ~/.gitignore

[instaweb]
httpd = webrick

[push]
default = upstream

[init]
templatedir = ~/.git_template

[help]
autocorrect = 1

[credential]
helper = osxkeychain

[hub]
protocol = https
GITCONFIG

gitconfig_file = "#{ENV['HOME']}/.gitconfig"

if !File.exists?(gitconfig_file) || ARGV[0] == "--force" || ARGV[0] == "--update"
  puts "configuring ~/.gitconfig"

  if ARGV[0] == "--update"
    user_name = `git config --global user.name`.chomp
    user_email = `git config --global user.email`.chomp
  else
    print "user.name (your full name): "
    user_name = $stdin.gets.chomp
    print "user.email (your email): "
    user_email = $stdin.gets.chomp
  end
  File.write(gitconfig_file, gitconfig.result(binding))
else
  $stderr.puts "existing ~/.gitconfig found, use --force to override or --update to use existing settings"
end
